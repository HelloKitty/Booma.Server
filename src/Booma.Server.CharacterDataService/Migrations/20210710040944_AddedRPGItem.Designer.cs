// <auto-generated />
using System;
using Glader.ASP.RPG;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Booma.Server.CharacterDataService.Migrations
{
    [DbContext(typeof(RPGCharacterDatabaseContext<PsobbCustomizationSlots, Vector3<ushort>, PsobbProportionSlots, Vector2<float>, CharacterRace, CharacterClass, DefaultTestSkillType, CharacterStatType, ItemClassType, PsobbQuality, Vector3<byte>>))]
    [Migration("20210710040944_AddedRPGItem")]
    partial class AddedRPGItem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("character");
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterCustomizableSlot<Booma.PsobbCustomizationSlots, Booma.Vector3<ushort>>", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("SlotType")
                        .HasColumnType("int");

                    b.Property<int>("CustomizationId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "SlotType");

                    b.HasIndex("CharacterId");

                    b.HasIndex("SlotType");

                    b.ToTable("character_customization_slot");
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterCustomizableSlotType<Booma.PsobbCustomizationSlots>", b =>
                {
                    b.Property<int>("SlotType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VisualName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SlotType");

                    b.ToTable("character_customization_slot_type");

                    b.HasData(
                        new
                        {
                            SlotType = 1,
                            Description = "",
                            VisualName = "Costume"
                        },
                        new
                        {
                            SlotType = 2,
                            Description = "",
                            VisualName = "Skin"
                        },
                        new
                        {
                            SlotType = 3,
                            Description = "",
                            VisualName = "Face"
                        },
                        new
                        {
                            SlotType = 4,
                            Description = "",
                            VisualName = "Head"
                        },
                        new
                        {
                            SlotType = 5,
                            Description = "",
                            VisualName = "Hair"
                        },
                        new
                        {
                            SlotType = 6,
                            Description = "",
                            VisualName = "Override"
                        });
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterDefinition<Booma.CharacterRace, Booma.CharacterClass>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("ClassId")
                        .HasColumnName("Class")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("RaceId")
                        .HasColumnName("Race")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("RaceId");

                    b.ToTable("character_definition");
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterOwnership", b =>
                {
                    b.Property<int>("OwnershipId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.HasKey("OwnershipId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("OwnershipId");

                    b.ToTable("character_ownership");
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("PlayTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time(6)")
                        .HasDefaultValue(new TimeSpan(0, 0, 0, 0, 0));

                    b.HasKey("Id");

                    b.ToTable("character_progress");
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterProportionSlot<Booma.PsobbProportionSlots, Booma.Vector2<float>>", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("SlotType")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "SlotType");

                    b.HasIndex("CharacterId");

                    b.HasIndex("SlotType");

                    b.ToTable("character_proportion_slot");
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterProportionSlotType<Booma.PsobbProportionSlots>", b =>
                {
                    b.Property<int>("SlotType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VisualName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SlotType");

                    b.ToTable("character_proportion_slot_type");

                    b.HasData(
                        new
                        {
                            SlotType = 1,
                            Description = "",
                            VisualName = "Default"
                        });
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterSkillKnown<Booma.DefaultTestSkillType>", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnName("Skill")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("SkillId");

                    b.ToTable("character_skill_known");
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterSkillLevel<Booma.DefaultTestSkillType>", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnName("Skill")
                        .HasColumnType("int");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("SkillId");

                    b.ToTable("character_skill_level");
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterStatDefault<Booma.CharacterStatType, Booma.CharacterRace, Booma.CharacterClass>", b =>
                {
                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<byte>("ClassId")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Level", "RaceId", "ClassId");

                    b.HasIndex("ClassId");

                    b.HasIndex("RaceId");

                    b.ToTable("character_stat_default");
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGClass<Booma.CharacterClass>", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VisualName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("class");

                    b.HasData(
                        new
                        {
                            Id = (byte)0,
                            Description = "",
                            VisualName = "HUmar"
                        },
                        new
                        {
                            Id = (byte)1,
                            Description = "",
                            VisualName = "HUnewearl"
                        },
                        new
                        {
                            Id = (byte)2,
                            Description = "",
                            VisualName = "HUcast"
                        },
                        new
                        {
                            Id = (byte)3,
                            Description = "",
                            VisualName = "RAmar"
                        },
                        new
                        {
                            Id = (byte)4,
                            Description = "",
                            VisualName = "RAcast"
                        },
                        new
                        {
                            Id = (byte)5,
                            Description = "",
                            VisualName = "RAcaseal"
                        },
                        new
                        {
                            Id = (byte)6,
                            Description = "",
                            VisualName = "FOmarl"
                        },
                        new
                        {
                            Id = (byte)7,
                            Description = "",
                            VisualName = "FOnewm"
                        },
                        new
                        {
                            Id = (byte)8,
                            Description = "",
                            VisualName = "FOnewearl"
                        },
                        new
                        {
                            Id = (byte)9,
                            Description = "",
                            VisualName = "HUcaseal"
                        },
                        new
                        {
                            Id = (byte)10,
                            Description = "",
                            VisualName = "FOmar"
                        },
                        new
                        {
                            Id = (byte)11,
                            Description = "",
                            VisualName = "RAmarl"
                        });
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("group");
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGGroupMember", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId");

                    b.HasIndex("GroupId");

                    b.ToTable("group_member");
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGItemClass<Booma.ItemClassType>", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VisualName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("item_class");

                    b.HasData(
                        new
                        {
                            Id = (byte)0,
                            Description = "",
                            VisualName = "Weapon"
                        },
                        new
                        {
                            Id = (byte)1,
                            Description = "",
                            VisualName = "Guard"
                        },
                        new
                        {
                            Id = (byte)2,
                            Description = "",
                            VisualName = "Mag"
                        },
                        new
                        {
                            Id = (byte)3,
                            Description = "",
                            VisualName = "Tool"
                        },
                        new
                        {
                            Id = (byte)4,
                            Description = "",
                            VisualName = "Meseta"
                        });
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGItemTemplate<Booma.ItemClassType, Booma.PsobbQuality, Booma.Vector3<byte>>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("ClassId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("QualityType")
                        .HasColumnType("int");

                    b.Property<int>("SubClassId")
                        .HasColumnType("int");

                    b.Property<string>("VisualName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("QualityType");

                    b.HasIndex("ClassId", "SubClassId");

                    b.ToTable("item_template");
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGQuality<Booma.PsobbQuality, Booma.Vector3<byte>>", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VisualName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("quality");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            VisualName = "Common"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            VisualName = "Rare"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            VisualName = "Epic"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            VisualName = "Legendary"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            VisualName = "SRank"
                        });
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGRace<Booma.CharacterRace>", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VisualName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("race");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            VisualName = "Human"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            VisualName = "Newman"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            VisualName = "Cast"
                        });
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGSItemSubClass<Booma.ItemClassType>", b =>
                {
                    b.Property<byte>("ItemClassId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("SubClassId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VisualName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ItemClassId", "SubClassId");

                    b.ToTable("item_sub_class");
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGSkill<Booma.DefaultTestSkillType>", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsPassiveSkill")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("VisualName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("skill");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            IsPassiveSkill = false,
                            VisualName = "Default"
                        });
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGStat<Booma.CharacterStatType>", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VisualName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("stat");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Description = "",
                            VisualName = "ATP"
                        },
                        new
                        {
                            Id = 1,
                            Description = "",
                            VisualName = "MST"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            VisualName = "EVP"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            VisualName = "HP"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            VisualName = "DFP"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            VisualName = "ATA"
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            VisualName = "LCK"
                        });
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterCustomizableSlot<Booma.PsobbCustomizationSlots, Booma.Vector3<ushort>>", b =>
                {
                    b.HasOne("Glader.ASP.RPG.DBRPGCharacter", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Glader.ASP.RPG.DBRPGCharacterCustomizableSlotType<Booma.PsobbCustomizationSlots>", "SlotDefinition")
                        .WithMany()
                        .HasForeignKey("SlotType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Booma.Vector3<ushort>", "SlotColor", b1 =>
                        {
                            b1.Property<int>("DBRPGCharacterCustomizableSlot<PsobbCustomizationSlots, Vector3<ushort>>CharacterId")
                                .HasColumnType("int");

                            b1.Property<int>("DBRPGCharacterCustomizableSlot<PsobbCustomizationSlots, Vector3<ushort>>SlotType")
                                .HasColumnType("int");

                            b1.Property<ushort>("X")
                                .HasColumnType("smallint unsigned");

                            b1.Property<ushort>("Y")
                                .HasColumnType("smallint unsigned");

                            b1.Property<ushort>("Z")
                                .HasColumnType("smallint unsigned");

                            b1.HasKey("DBRPGCharacterCustomizableSlot<PsobbCustomizationSlots, Vector3<ushort>>CharacterId", "DBRPGCharacterCustomizableSlot<PsobbCustomizationSlots, Vector3<ushort>>SlotType");

                            b1.ToTable("character_customization_slot");

                            b1.WithOwner()
                                .HasForeignKey("DBRPGCharacterCustomizableSlot<PsobbCustomizationSlots, Vector3<ushort>>CharacterId", "DBRPGCharacterCustomizableSlot<PsobbCustomizationSlots, Vector3<ushort>>SlotType");
                        });
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterDefinition<Booma.CharacterRace, Booma.CharacterClass>", b =>
                {
                    b.HasOne("Glader.ASP.RPG.DBRPGClass<Booma.CharacterClass>", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Glader.ASP.RPG.DBRPGCharacter", "Character")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Glader.ASP.RPG.DBRPGRace<Booma.CharacterRace>", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterOwnership", b =>
                {
                    b.HasOne("Glader.ASP.RPG.DBRPGCharacter", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterProgress", b =>
                {
                    b.HasOne("Glader.ASP.RPG.DBRPGCharacter", "Character")
                        .WithOne("Progress")
                        .HasForeignKey("Glader.ASP.RPG.DBRPGCharacterProgress", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterProportionSlot<Booma.PsobbProportionSlots, Booma.Vector2<float>>", b =>
                {
                    b.HasOne("Glader.ASP.RPG.DBRPGCharacter", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Glader.ASP.RPG.DBRPGCharacterProportionSlotType<Booma.PsobbProportionSlots>", "SlotDefinition")
                        .WithMany()
                        .HasForeignKey("SlotType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Booma.Vector2<float>", "Proportion", b1 =>
                        {
                            b1.Property<int>("DBRPGCharacterProportionSlot<PsobbProportionSlots, Vector2<float>>CharacterId")
                                .HasColumnType("int");

                            b1.Property<int>("DBRPGCharacterProportionSlot<PsobbProportionSlots, Vector2<float>>SlotType")
                                .HasColumnType("int");

                            b1.Property<float>("X")
                                .HasColumnType("float");

                            b1.Property<float>("Y")
                                .HasColumnType("float");

                            b1.HasKey("DBRPGCharacterProportionSlot<PsobbProportionSlots, Vector2<float>>CharacterId", "DBRPGCharacterProportionSlot<PsobbProportionSlots, Vector2<float>>SlotType");

                            b1.ToTable("character_proportion_slot");

                            b1.WithOwner()
                                .HasForeignKey("DBRPGCharacterProportionSlot<PsobbProportionSlots, Vector2<float>>CharacterId", "DBRPGCharacterProportionSlot<PsobbProportionSlots, Vector2<float>>SlotType");
                        });
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterSkillKnown<Booma.DefaultTestSkillType>", b =>
                {
                    b.HasOne("Glader.ASP.RPG.DBRPGCharacter", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Glader.ASP.RPG.DBRPGSkill<Booma.DefaultTestSkillType>", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterSkillLevel<Booma.DefaultTestSkillType>", b =>
                {
                    b.HasOne("Glader.ASP.RPG.DBRPGCharacter", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Glader.ASP.RPG.DBRPGSkill<Booma.DefaultTestSkillType>", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Glader.ASP.RPG.DBRPGCharacterSkillKnown<Booma.DefaultTestSkillType>", "KnownSkill")
                        .WithOne("SkillLevelData")
                        .HasForeignKey("Glader.ASP.RPG.DBRPGCharacterSkillLevel<Booma.DefaultTestSkillType>", "CharacterId", "SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGCharacterStatDefault<Booma.CharacterStatType, Booma.CharacterRace, Booma.CharacterClass>", b =>
                {
                    b.HasOne("Glader.ASP.RPG.DBRPGClass<Booma.CharacterClass>", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Glader.ASP.RPG.DBRPGRace<Booma.CharacterRace>", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Glader.ASP.RPG.RPGStatValue<Booma.CharacterStatType>", "Stats", b1 =>
                        {
                            b1.Property<int>("Level")
                                .HasColumnType("int");

                            b1.Property<int>("Race")
                                .HasColumnType("int");

                            b1.Property<byte>("ClassId")
                                .HasColumnType("tinyint unsigned");

                            b1.Property<int>("StatType")
                                .HasColumnType("int");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("Level", "Race", "ClassId", "StatType");

                            b1.HasIndex("StatType");

                            b1.ToTable("RPGStatValue<CharacterStatType>");

                            b1.HasOne("Glader.ASP.RPG.DBRPGStat<Booma.CharacterStatType>", "Stat")
                                .WithMany()
                                .HasForeignKey("StatType")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("Level", "Race", "ClassId");
                        });
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGGroupMember", b =>
                {
                    b.HasOne("Glader.ASP.RPG.DBRPGCharacter", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Glader.ASP.RPG.DBRPGGroup", "Group")
                        .WithMany("Members")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGItemTemplate<Booma.ItemClassType, Booma.PsobbQuality, Booma.Vector3<byte>>", b =>
                {
                    b.HasOne("Glader.ASP.RPG.DBRPGQuality<Booma.PsobbQuality, Booma.Vector3<byte>>", "Quality")
                        .WithMany()
                        .HasForeignKey("QualityType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Glader.ASP.RPG.DBRPGSItemSubClass<Booma.ItemClassType>", "ItemSubClass")
                        .WithMany()
                        .HasForeignKey("ClassId", "SubClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGQuality<Booma.PsobbQuality, Booma.Vector3<byte>>", b =>
                {
                    b.OwnsOne("Booma.Vector3<byte>", "Color", b1 =>
                        {
                            b1.Property<int>("DBRPGQuality<PsobbQuality, Vector3<byte>>Id")
                                .HasColumnType("int");

                            b1.Property<byte>("X")
                                .HasColumnType("tinyint unsigned");

                            b1.Property<byte>("Y")
                                .HasColumnType("tinyint unsigned");

                            b1.Property<byte>("Z")
                                .HasColumnType("tinyint unsigned");

                            b1.HasKey("DBRPGQuality<PsobbQuality, Vector3<byte>>Id");

                            b1.ToTable("quality");

                            b1.WithOwner()
                                .HasForeignKey("DBRPGQuality<PsobbQuality, Vector3<byte>>Id");
                        });
                });

            modelBuilder.Entity("Glader.ASP.RPG.DBRPGSItemSubClass<Booma.ItemClassType>", b =>
                {
                    b.HasOne("Glader.ASP.RPG.DBRPGItemClass<Booma.ItemClassType>", "ItemClass")
                        .WithMany("SubClasses")
                        .HasForeignKey("ItemClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

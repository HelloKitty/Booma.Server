// <auto-generated />
using Glader.ASP.ServiceDiscovery;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Booma.Server.ServiceDiscoveryService.Migrations
{
    [DbContext(typeof(ServiceDiscoveryDatabaseContext))]
    [Migration("20201226103328_InitialCreateSD")]
    partial class InitialCreateSD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Glader.ASP.ServiceDiscovery.ServiceEndpointModel", b =>
                {
                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("ServiceId");

                    b.ToTable("service_endpoints");
                });

            modelBuilder.Entity("Glader.ASP.ServiceDiscovery.ServiceEntryModel", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("ServiceId");

                    b.HasAlternateKey("ServiceName");

                    b.ToTable("services");
                });

            modelBuilder.Entity("Glader.ASP.ServiceDiscovery.ServiceEndpointModel", b =>
                {
                    b.HasOne("Glader.ASP.ServiceDiscovery.ServiceEntryModel", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Glader.ASP.ServiceDiscovery.ResolvedEndpoint", "Endpoint", b1 =>
                        {
                            b1.Property<int>("ServiceEndpointModelServiceId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<int>("Port")
                                .HasColumnType("int");

                            b1.HasKey("ServiceEndpointModelServiceId");

                            b1.ToTable("service_endpoints");

                            b1.WithOwner()
                                .HasForeignKey("ServiceEndpointModelServiceId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

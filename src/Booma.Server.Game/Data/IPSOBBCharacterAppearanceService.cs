using System;
using System.Collections.Generic;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Glader.ASP.RPGCharacter;
using Glader.Essentials;
using Refit;

namespace Booma
{
	/// <summary>
	/// Simplified type interface for <see cref="ICharacterAppearanceService{TCustomizableSlotType,TColorStructureType,TProportionSlotType,TProportionStructureType}"/>
	/// </summary>
	public interface IPSOBBCharacterAppearanceService : ICharacterAppearanceService<PsobbCustomizationSlots, Vector3<ushort>, PsobbProportionSlots, Vector2<float>>
	{
		//TODO: This is required due to a bug: https://github.com/reactiveui/refit/issues/931
		//Get(), GetAll() methods are working
		[Get("/DummyMethodForRefit/{id}")]
		Task<int> DummyMethodForRefit(int id, CancellationToken token = default);
	}

	partial class AutoGeneratedIPSOBBCharacterAppearanceService : IPSOBBCharacterAppearanceService
	{
		public Task<ResponseModel<RPGCharacterCustomizationData<PsobbCustomizationSlots, Vector3<ushort>, PsobbProportionSlots, Vector2<float>>, CharacterDataQueryResponseCode>> RetrieveCharacterAppearanceAsync(int characterId, CancellationToken token = new CancellationToken())
		{
			var arguments = new object[] { characterId, token };
			var func = requestBuilder.BuildRestResultFuncForMethod(nameof(RetrieveCharacterAppearanceAsync), new Type[] { typeof(int), typeof(CancellationToken) });
			return (Task<ResponseModel<RPGCharacterCustomizationData<PsobbCustomizationSlots, Vector3<ushort>, PsobbProportionSlots, Vector2<float>>, CharacterDataQueryResponseCode>>)func(Client, arguments);
		}

		public Task<CharacterDataQueryResponseCode> CreateCharacterAppearanceAsync(int characterId, RPGCharacterCustomizationData<PsobbCustomizationSlots, Vector3<ushort>, PsobbProportionSlots, Vector2<float>> data, CancellationToken token = new CancellationToken())
		{
			var arguments = new object[] { characterId, data, token };
			var func = requestBuilder.BuildRestResultFuncForMethod(nameof(CreateCharacterAppearanceAsync), new Type[] { typeof(int), typeof(RPGCharacterCustomizationData<PsobbCustomizationSlots, Vector3<ushort>, PsobbProportionSlots, Vector2<float>>), typeof(CancellationToken) });
			return (Task<CharacterDataQueryResponseCode>)func(Client, arguments);
		}
	}
}
